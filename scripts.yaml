# alexa going out script
alexa_going_out:
  alias: "Going Out"
  sequence:
    - service: input_select.select_option
      data:
        entity_id: input_select.presence
        option: "Away"

# anti-freeze activate script
anti_freeze_on:
  alias: Anti-Freeze On
  description: Turn on heaters to prevent freezing
  mode: parallel
  fields:
    thermostat:
      description: "Thermostat to check and update"
      example: climate.living_room
  sequence:
    # continue if unit is currently off
    - condition: template
      value_template: "{{ states(thermostat) == 'off' }}"
    # continue if current room temp is below the low threshold
    - condition: template
      value_template: "{{ ( state_attr(thermostat, 'current_temperature') < states('input_number.anti_freeze_low_indoor_threshold') | int ) }}"
    # turn on the heat and set it to the anti-freeze setpoint
    - service: climate.set_hvac_mode
      data_template:
        entity_id: "{{ thermostat }}"
        hvac_mode: heat
    - delay: "00:00:30"
    - service: climate.set_temperature
      data_template:
        entity_id: "{{ thermostat }}"
        temperature: "{{ states('input_number.anti_freeze_temperature') }}"

# anti-freeze off script
anti_freeze_off:
  alias: Anti-Freeze Off
  description: Turn off heaters when outdoor temp is sufficient to prevent freezing
  mode: parallel
  fields:
    thermostat:
      description: "Thermostat to check and update"
      example: climate.living_room
  sequence:
    # continue if unit is currently on heat
    - condition: template
      value_template: "{{ states(thermostat) == 'heat' }}"
    # continue if current set point matches the anti-freeze setpoint.
    - condition: template
      value_template: "{{ ( state_attr(thermostat, 'temperature') == states('input_number.anti_freeze_temperature') | int ) }}"
    # turn on the heat and set it to the anti-freeze setpoint
    - service: climate.set_hvac_mode
      data_template:
        entity_id: "{{ thermostat }}"
        hvac_mode: "off"

# pre-warm bedroom script
pre_warm:
  alias: Pre-warm
  description: Pre-warm bedroom before bed and at morning
  mode: parallel
  fields:
    room:
      description: "Room for climate device for bedroom"
      example: master_bedroom
  sequence:
    # activate cliamte react
    - service: switch.turn_on
      data_template:
        entity_id: "switch.{{ room }}_ac_climate_react"
    # continue if temprature is below pre-warm threshold
    - condition: template
      value_template: "{{ ( state_attr('climate.' + room, 'current_temperature') < states('input_number.prewarm_threshold') | int ) }}"
    # activate heat for two hours
    - service: climate.set_hvac_mode
      data_template:
        entity_id: "climate.{{ room }}"
        hvac_mode: heat
    # delay to address race condition before setting temp on thermostat.
    - delay: "00:00:30"
    # set temp
    - service: climate.set_temperature
      data_template:
        entity_id: "climate.{{ room }}"
        temperature: "{{ states('input_number.prewarm_temperature') }}"
    # run for two hours
    - delay: "02:00"
    # set to nighttime setpoint or deactivate heat depending on outdoor temp
    - choose:
      # if outdoor temp is below threshold
      - conditions:
          - condition: numeric_state
            entity_id: weather.home
            attribute: temperature
            below: input_number.nighttime_outdoor_cold_threshold
        sequence:
          - service: climate.set_temperature
            data_template: 
              entity_id: "climate.{{ room }}"
              temperature: "{{ states('input_number.nighttime_setpoint') }}"
          # re-enable climate react
          - delay: "00:01:00"
          - service: switch.turn_on
            data_template:
              entity_id: "switch.{{ room }}_ac_climate_react"
      # otherwise, turn off the heat
      default: 
      - service: climate.set_hvac_mode
        data_template:
          entity_id: "climate.{{ room }}"
          hvac_mode: "off"

# wake up script
wake_up:
  alias: Wake Up
  description: Pre-Alarm Wake Up Routine
  mode: parallel
  fields:
    warmer:
      description: "Towel warmer for Bedroom"
      example: "guest_bath_towel_warmer"
  sequence:
    # activate towel warmer
    - service: switch.turn_on
      data_template:
        entity_id: "switch.{{ warmer }}"
    # activate common area AC climate react
    - service: switch.turn_on
      entity_id: switch.living_room_ac_climate_react
    - service: switch.turn_on
      entity_id: switch.den_ac_climate_react
    # wait two hours
    - delay: "02:00:00"
    # switch off towel warmer
    - service: switch.turn_off
      data_template:
        entity_id: "switch.{{ warmer }}"

# morning bathroom heater routine
wake_up_bath_heater:
  alias: Wake Up Bathroom Heater
  description: Routine to run during wake-up for bathroom heater
  sequence:
    # only run if its cold outside
    - condition: numeric_state
      entity_id: weather.home
      attribute: temperature
      below: input_number.bathroom_heater_warm_up_low_threshold
    # run heater for two hours
    - service: climate.set_hvac_mode
      entity_id: climate.master_bath_heater
      data:
        hvac_mode: "heat_cool"
    - delay: "02:00:00"
    - service: climate.turn_off
      entity_id: climate.master_bath_heater

# Good Night Script
good_night:
  alias: Good Night
  description: Turn everything off for bed
  sequence:
    # turm off lights
    - service: light.turn_off
      entity_id:
        - light.den_lights
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.living_room
        - light.laundry_room
        - light.office
        - light.guest_room
        - light.master_bedroom
        - light.kitchen
    # turn off towel warmer
    - service: switch.turn_off
      entity_id: switch.master_bath_towel_warmer
    # turn off TV
    - service: remote.turn_off
      entity_id: remote.living_room_2
    # turn off climate react
    - service: switch.turn_off
      entity_id:
        - switch.den_ac_climate_react
        - switch.living_room_ac_climate_react
    # turn off master bath and vestibule heaters
    - service: climate.turn_off
      entity_id:
        - climate.master_bath_heater
        - climate.vestibule_heater    
    # set split units in Den and Living Room to nighttime temp if outdoor temp is below maint threshold.
    - choose:
      # if outdoor temp is below threshold
      - conditions:
          - condition: numeric_state
            entity_id: weather.home
            attribute: temperature
            below: input_number.nighttime_outdoor_cold_threshold
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id:
                - climate.den_thermostat
                - climate.den
                - climate.living_room
                - climate.living_room_thermostat
              hvac_mode: "heat"
          - service: climate.set_temperature
            data_template: 
              entity_id: 
                - climate.den_thermostat
                - climate.den
                - climate.living_room
                - climate.living_room_thermostat
              temperature: "{{ states('input_number.nighttime_setpoint') }}"
      # otherwise, turn off the heat
      default: 
        - service: climate.turn_off
          entity_id:
            - climate.den_thermostat
            - climate.den
            - climate.living_room
            - climate.living_room_thermostat



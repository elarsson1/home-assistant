# Restart Alexa Media integration
reload_alexa_media:
  alias: "Reload Alexa Media"
  mode: single
  sequence:
    - service: homeassistant.reload_config_entry
      target:
        device_id: 0942ca36495e2d4c0e185549e4c42773

# HVAC Controller Scripts
# Set a single unit to a given preset temp
hvac_enable_preset:
  alias: "HVAC Enable Preset"
  mode: parallel
  fields:
    zone:
      name: Zone
      description: "The climate zone to change"
      required: true
      selector:
        select:
          options:
            - Living_Room
            - Den
            - Master_Bedroom
            - Guest_Room
    preset:
      name: Preset
      description: "Temprature Preset"
      required: true
      selector:
        select:
          options:
            - PreWake
            - Day
            - PreSleep
            - Night
            - Away
            - ExtAway
  sequence:
    - variables:
        unit: "climate.{{ zone }}"
    # wait for unavaialble unit to become available up to 5 minutes
    - repeat:
        while: "{{ states(unit) in ('unavailable', 'unknown') and repeat.index <= 10 }}"
        sequence:
          - delay: 30
    - variables:
        state: "{{ states(unit) }}"
    # only continue if we are heating or cooling
    - condition: "{{ state in ('heat', 'cool') }}"
    # get target temp value
    - variables:
        temp: "{{ states('input_number.hvac_' + zone + '_' + preset + '_' + state) }}"
    # set the temperature, try for up to 5 minutes
    - repeat:
        while: "{{ not is_state_attr(unit, 'temperature', temp) and repeat.index <= 10 }}"
        sequence:
          - service: climate.set_temperature
            data:
              entity_id: "{{ unit }}"
              temperature: "{{ temp }}"
          - delay: 30

# script which is triggered when a return home is anticipated
# sets HVAC mode back to Home mode for up to 6 hours waiting for return home
hvac_prepare_return_from_extaway:
  alias: "HVAC Prepare Return from ExtAway"
  mode: single # only run one of these at a time
  max_exceeded: silent # don't log errors if attempt to run more than 1 as in time based triggers
  sequence:
    # only do this if we have been at Extended Away for at least 10 hours
    - condition: state
      entity_id: input_select.hvac_controller_house_mode
      state: "ExtAway"
      for: "10:00:00"
    # set the HVAC mode to Home
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: "Home"
    # wait up to 5 hours for the return home
    - wait_template: "{{ is_state('person.axel_larsson', 'home') }}"
      timeout: "05:00:00"
    # if condition was not met and we timed out, then set things back.
    - condition: "{{ not wait.completed }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: "ExtAway"

# going out script
going_out:
  alias: "Going Out"
  mode: single
  sequence:
    - service: light.turn_off
      entity_id:
        - light.den_lights
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.living_room
        - light.laundry_room
        - light.office
        - light.guest_room
        - light.master_bedroom
        - light.kitchen
    - service: switch.turn_off
      entity_id:
        - switch.guest_bath_towel_warmer
        - switch.master_bath_towel_warmer
    - service: remote.turn_off
      entity_id: remote.living_room_2
    - service: remote.turn_off
      entity_id: remote.den
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: Away

# wake up script
wake_up:
  alias: Wake Up
  description: Pre-Alarm Wake Up Routine
  mode: parallel
  fields:
    warmer:
      description: "Towel warmer for Bedroom"
      example: "guest_bath_towel_warmer"
    hvac:
      description: "HVAC Zone"
      example: master_bedroom
  sequence:
    # activate towel warmer
    - service: switch.turn_on
      data:
        entity_id: "switch.{{ warmer }}"
    # set HVAC mode for common area
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_common_area_preset
        option: Day
    # set HVAC pre-wake mode for bedroom
    - service: input_select.select_option
      data:
        entity_id: "input_select.hvac_controller_{{ hvac }}_preset"
        option: PreWake
    # wait one hour
    - delay: "01:00:00"
    # disarm alarm
    - service: script.turn_on
      target:
        entity_id: script.alarm_disarm
    # wait one hours
    - delay: "01:00:00"
    # switch off towel warmer
    - service: switch.turn_off
      data:
        entity_id: "switch.{{ warmer }}"
    # set HVAC Day mode for bedroom
    - service: input_select.select_option
      data:
        entity_id: "input_select.hvac_controller_{{ hvac }}_preset"
        option: Day

# morning bathroom heater routine
wake_up_bath_heater:
  alias: Wake Up Bathroom Heater
  description: Routine to run during wake-up for bathroom heater
  sequence:
    # only run if its cold outside
    - condition: numeric_state
      entity_id: weather.home
      attribute: temperature
      below: input_number.bathroom_heater_warm_up_low_threshold
    # run heater for two hours
    - service: climate.set_hvac_mode
      entity_id: climate.master_bath_heater
      data:
        hvac_mode: "heat_cool"
    - delay: "02:00:00"
    - service: climate.turn_off
      entity_id: climate.master_bath_heater

# Good Night Script
good_night:
  alias: Good Night
  description: Turn everything off for bed
  sequence:
    # turm off lights
    - service: light.turn_off
      entity_id:
        - light.den_lights
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.living_room
        - light.laundry_room
        - light.office
        - light.guest_room
        - light.master_bedroom
        - light.kitchen
    # turn off towel warmer
    - service: switch.turn_off
      entity_id: switch.master_bath_towel_warmer
    # turn off TV
    - service: remote.turn_off
      entity_id: remote.living_room_2
    # Set HVAC modes to nightime
    - repeat:
        for_each:
          - common_area
          - master_bedroom
          - guest_room
        sequence:
          - service: input_select.select_option
            data:
              option: Night
              entity_id: "input_select.hvac_controller_{{ repeat.item }}_preset"
    # turn off master bath heaters
    - service: climate.turn_off
      entity_id:
        - climate.master_bath_heater
    # arm alarm in home mode
    - service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel

# conditionally disarm alarms
# needed to avoid spurious simplisafe notifications if alarm is aready disarmed
alarm_disarm:
  alias: Disarm Alarms
  description: Disable Alexa Guard and Simplisafe
  sequence:
    # alexa does not care about disarm if already off, so just do it
    - service: alarm_control_panel.alarm_disarm
      entity_id: alarm_control_panel.alexa_guard_b0cd9
    # disarm SimpliSafe if it is not already off
    - if:
        not:
          - alias: "Alarm disarmed"
            condition: state
            entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
            state: "disarmed"
      then:
        - service: alarm_control_panel.alarm_disarm
          entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel

# conditionally arm alarms
# needed to avoid spurious simplisafe notifications if alarm is aready armed
alarm_arm_away:
  alias: Arm Alarms Away
  description: Arm Alexa Guard and Simplisafe
  sequence:
    # alexa does not care about disarm if already on, so just do it
    - service: alarm_control_panel.alarm_arm_away
      entity_id: alarm_control_panel.alexa_guard_b0cd9
    # only proceed if Simplisafe is currently disarmed
    - condition: state
      entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
      state: "disarmed"
    # arm SimpliSafe to home if the dog is present, otherwise, Away
    - if:
        - alias: Sophie home
          condition: state
          entity_id: person.sophie
          state: home
      then:
        - service: alarm_control_panel.alarm_arm_home
          entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
      else:
        - service: alarm_control_panel.alarm_arm_away
          entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel

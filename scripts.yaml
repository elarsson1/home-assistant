# Run HA backup
run_backup:
  alias: Automatic Snapshot
  sequence:
    - service: auto_backup.backup_full
      data:
        name: "DailyBackup: {{ now().strftime('%Y-%m-%d') }}"
        keep_days: 14

# Restart Alexa Media integration
reload_alexa_media:
  alias: "Reload Alexa Media"
  mode: single
  sequence:
    - service: homeassistant.reload_config_entry
      target:
        device_id: 0942ca36495e2d4c0e185549e4c42773

# HVAC Controller Scripts
# Set unit mode and current preset temp
hvac_enable_mode:
  alias: "HVAC Enable Mode"
  mode: parallel
  fields:
    zone:
      name: Zone
      description: "The climate zone to change"
      required: true
      selector:
        select:
          options:
            - Living_Room
            - Den
            - Master_Bedroom
            - Guest_Room
            - Den_Baseboard
            - Den_Heater
            - Living_Room_Heater
            - Master_Bedroom_Heater
    mode:
      name: Mode
      description: "The climate mode to set"
      required: true
      selector:
        select:
          options:
            - "off"
            - "heat"
            - "cool"
  sequence:
    - variables:
        unit: "climate.{{ zone }}"
    # wait for unavaialble unit to become available up to 5 minutes
    - wait_template: "{{ states(unit) not in ('unavailable', 'unknown') }}"
      timeout: "00:05:00"
    # only continue if unit became available and continue if current unit state is different then target
    - condition: "{{ wait.completed and ( not is_state(unit, mode) ) }}"
    # drive unit to desired state for up to 10 minutes
    - repeat:
        while: "{{ ( not is_state(unit, mode) ) and repeat.index <= 5 }}"
        sequence:
          - service: climate.set_hvac_mode
            continue_on_error: true
            data:
              entity_id: "{{ unit }}"
              hvac_mode: "{{ mode }}"
          - delay: 125
    # only continue if mode is heat or cool
    - condition: "{{ mode in ('heat', 'cool') }}"
    # set current preset for this zone
    - service: script.hvac_enable_current
      data:
        zone: "{{ zone }}"

# Set current preset for unit based upon house and area mode selectors
hvac_enable_current:
  alias: "HVAC Enable Current"
  mode: parallel
  fields:
    zone:
      name: Zone
      description: "The climate zone to change"
      required: true
      selector:
        select:
          options:
            - Living_Room
            - Den
            - Master_Bedroom
            - Guest_Room
            - Den_Baseboard
            - Den_Heater
            - Living_Room_Heater
            - Master_Bedroom_Heater
  sequence:
    # select the preset to set for this zone
    - choose:
        # If house mode is away or extended away, use that as preset
        - conditions: >
            {{ states('input_select.hvac_controller_house_mode') in ('Away', 'ExtAway') }}
          sequence:
            - service: script.hvac_enable_preset
              data:
                zone: "{{ zone }}"
                preset: "{{ states('input_select.hvac_controller_house_mode') }}"
        # otherwise, select preset based upon zone
        # master bedroom area
        - conditions: "{{ zone|slugify() in ('master_bedroom', 'master_bedroom_heater') }}"
          sequence:
            - service: script.hvac_enable_preset
              data:
                zone: "{{ zone }}"
                preset: "{{ states('input_select.hvac_controller_master_bedroom_preset') }}"
        # guest room area
        - conditions: "{{ zone|slugify() in ('guest_room') }}"
          sequence:
            - service: script.hvac_enable_preset
              data:
                zone: "{{ zone }}"
                preset: "{{ states('input_select.hvac_controller_guest_room_preset') }}"
      # otherwise, common area preset is used
      default:
        - service: script.hvac_enable_preset
          data:
            zone: "{{ zone }}"
            preset: "{{ states('input_select.hvac_controller_common_area_preset') }}"

# Set a single unit to a given preset temp
hvac_enable_preset:
  alias: "HVAC Enable Preset"
  mode: parallel
  fields:
    zone:
      name: Zone
      description: "The climate zone to change"
      required: true
      selector:
        select:
          options:
            - Living_Room
            - Den
            - Master_Bedroom
            - Guest_Room
            - Den_Baseboard
            - Den_Heater
            - Living_Room_Heater
            - Master_Bedroom_Heater
    preset:
      name: Preset
      description: "Temprature Preset"
      required: true
      selector:
        select:
          options:
            - PreWake
            - Day
            - PreSleep
            - Night
            - Away
            - ExtAway
  sequence:
    - variables:
        unit: "climate.{{ zone }}"
    # wait for unavaialble unit to become available up to 5 minutes
    - wait_template: "{{ states(unit) not in ('unavailable', 'unknown') }}"
      timeout: "00:05:00"
    - variables:
        state: "{{ states(unit) }}"
    # only continue if we are heating or cooling
    - condition: "{{ state in ('heat', 'cool') }}"
    # get target temp value
    - variables:
        temp: "{{ states('input_number.hvac_' + zone + '_' + preset + '_' + state) }}"
    # set the temperature, try for up to 10 minutes
    - repeat:
        while: "{{ not is_state_attr(unit, 'temperature', temp) and repeat.index <= 5 }}"
        sequence:
          - service: climate.set_temperature
            continue_on_error: true
            data:
              entity_id: "{{ unit }}"
              temperature: "{{ temp }}"
          - delay: 125

# script which is triggered when a return home is anticipated
# sets HVAC mode back to Home mode for up to 6 hours waiting for return home
hvac_prepare_return_from_extaway:
  alias: "HVAC Prepare Return from ExtAway"
  mode: single # only run one of these at a time
  max_exceeded: silent # don't log errors if attempt to run more than 1 as in time based triggers
  sequence:
    # only do this if we are at extended away mode
    - condition: state
      entity_id: input_select.hvac_controller_house_mode
      state: "ExtAway"
    # check saved timestamp to be sure we have been set for at least 10 hours
    # changed from using "for" quallifier on state condition because this resets
    # whenever HA is restarted. The input_datetime value will survive HA restarts
    - condition: >
        {{ as_timestamp(now()) - as_timestamp(states('input_datetime.hvac_controller_house_mode_last_set')) > 36000 }}
    # set the HVAC mode to Home
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: "Home"
    # wait up to 5 hours for the return home
    - wait_template: "{{ is_state('person.axel_larsson', 'home') }}"
      timeout: "05:00:00"
    # if condition was not met and we timed out, then set things back.
    - condition: "{{ not wait.completed }}"
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: "ExtAway"

# going out script
going_out:
  alias: "Going Out"
  mode: single
  sequence:
    - service: light.turn_off
      continue_on_error: true
      entity_id:
        - light.den_lights
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.living_room
        - light.laundry_room
        - light.office
        - light.guest_room
        - light.master_bedroom
        - light.kitchen
    - service: switch.turn_off
      continue_on_error: true
      entity_id:
        - switch.guest_bath_towel_warmer
        - switch.master_bath_towel_warmer
    - service: lock.lock
      continue_on_error: true
      target:
        entity_id:
          - lock.basement_door_lock
          - lock.front_door_lock
    - service: remote.turn_off
      continue_on_error: true
      entity_id:
        - remote.living_room_2
        - remote.den
    # only set HVAC mode to Away if it is currently home
    - condition: >
        {{ is_state('input_select.hvac_controller_house_mode', 'Home') }}
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: Away

# wake up script
wake_up:
  alias: Wake Up
  description: Pre-Alarm Wake Up Routine
  mode: parallel
  fields:
    warmer:
      description: "Towel warmer for Bedroom"
      example: "guest_bath_towel_warmer"
    hvac:
      description: "HVAC Zone"
      example: master_bedroom
  sequence:
    # activate towel warmer
    - service: switch.turn_on
      continue_on_error: true
      data:
        entity_id: "switch.{{ warmer }}"
    # set HVAC mode for common area
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_common_area_preset
        option: Day
    # set HVAC pre-wake mode for bedroom
    - service: input_select.select_option
      data:
        entity_id: "input_select.hvac_controller_{{ hvac }}_preset"
        option: PreWake
    # wait one hour
    - delay: "01:00:00"
    # disarm alarm
    - service: script.turn_on
      target:
        entity_id: script.alarm_disarm
    # wait one hours
    - delay: "01:00:00"
    # switch off towel warmer
    - service: switch.turn_off
      continue_on_error: true
      data:
        entity_id: "switch.{{ warmer }}"
    # set HVAC Day mode for bedroom
    - service: input_select.select_option
      data:
        entity_id: "input_select.hvac_controller_{{ hvac }}_preset"
        option: Day

# morning bathroom heater routine
wake_up_bath_heater:
  alias: Wake Up Bathroom Heater
  description: Routine to run during wake-up for bathroom heater
  sequence:
    # only run if its cold outside
    - condition: numeric_state
      entity_id: weather.home
      attribute: temperature
      below: input_number.bathroom_heater_warm_up_low_threshold
    # run heater for two hours
    - service: climate.set_hvac_mode
      continue_on_error: true
      entity_id: climate.master_bath_heater
      data:
        hvac_mode: "heat"
    - delay: "02:00:00"
    - service: climate.turn_off
      continue_on_error: true
      entity_id: climate.master_bath_heater

# script to run when dismissing alexa alarm. enables bedroom motion sensor
# only if triggered from bedroom (determined by virtual light used as a wake-up
# trigger from alexa)
wake_up_motion_sensor:
  alias: Wake-up Motion Sensor
  description: Enable bedroom motion sensor when waking up
  sequence:
    # only if triggered by bedroom, as indicated by state of virtual light used by alexa alarm
    - condition: state
      entity_id: light.virtual_wake_up_master_bedroom
      state: "on"
    - condition: numeric_state
      entity_id: light.virtual_wake_up_master_bedroom
      attribute: brightness
      above: 240
    # turn on motion sensor
    - service: switch.turn_on
      entity_id: switch.master_bedroom_motion

# Good Night Script
good_night:
  alias: Good Night
  description: Turn everything off for bed
  sequence:
    # see which Alexa device we were called from
    - service: alexa_media.update_last_called
      continue_on_error: true
    - choose:
        # if we were called from the the ground floor, shut off a subset of devices
        - conditions: >
            {{ is_state_attr('media_player.guest_room_echo_show', 'last_called', true) 
               or is_state_attr('media_player.den_echo_show', 'last_called', true) 
               or is_state_attr('media_player.office_echo_show', 'last_called', true) }}
          sequence:
            # turn off lights
            - service: light.turn_off
              continue_on_error: true
              entity_id:
                - light.guest_room
                - light.laundry_room
                - light.office
                - light.den_lights
                - light.den_tree
            # turn off towel warmer
            - service: switch.turn_off
              continue_on_error: true
              entity_id: switch.guest_bath_towel_warmer
            # set HVAC to night mode
            # only change guest room mode if guest overnight mode is enabled
            - if:
                - condition: state
                  entity_id: input_boolean.guests_overnight
                  state: "on"
              then:
                - service: input_select.select_option
                  data:
                    option: Night
                    entity_id: input_select.hvac_controller_guest_room_preset
            # turn off TV
            - service: remote.turn_off
              continue_on_error: true
              entity_id: remote.den
        # if we were called from elsewhere, but guests are staying over
        - conditions: >
            {{ is_state('input_boolean.guests_overnight', 'on' ) }}
          sequence:
            # turm off lights
            - service: light.turn_off
              continue_on_error: true
              entity_id:
                - light.vestibule_switch
                - light.under_stoop_lights
                - light.living_room
                - light.master_bedroom
                - light.kitchen
                - light.porch_switch
                - light.deck_lights
                - light.candles
                - light.outdoor_christmas_lights
            # turn off towel warmer and bedroom motion sensor
            - service: switch.turn_off
              continue_on_error: true
              entity_id:
                - switch.master_bedroom_motion
                - switch.master_bath_towel_warmer
            # Set HVAC modes to nightime
            - service: input_select.select_option
              data:
                option: Night
                entity_id: input_select.hvac_controller_common_area_preset
            - service: input_select.select_option
              data:
                option: Night
                entity_id: input_select.hvac_controller_master_bedroom_preset
            # arm alarm in home mode
            - service: alarm_control_panel.alarm_arm_home
              continue_on_error: true
              entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
            # lock doors
            - service: lock.lock
              continue_on_error: true
              target:
                entity_id:
                  - lock.basement_door_lock
                  - lock.front_door_lock
            # turn off master bath heaters
            - service: climate.turn_off
              continue_on_error: true
              entity_id:
                - climate.master_bath_heater
            # turn off TV
            - service: remote.turn_off
              continue_on_error: true
              entity_id: remote.living_room_2
      # guest not here and called from any device but guest room
      default:
        # turm off lights
        - service: light.turn_off
          continue_on_error: true
          entity_id:
            - light.den_lights
            - light.vestibule_switch
            - light.under_stoop_lights
            - light.living_room
            - light.laundry_room
            - light.office
            - light.master_bedroom
            - light.kitchen
            - light.porch_switch
            - light.deck_lights
            - light.candles
            - light.outdoor_christmas_lights
            - light.den_tree
        # turn off towel warmer and bedroom motion sensor
        - service: switch.turn_off
          continue_on_error: true
          entity_id:
            - switch.master_bedroom_motion
            - switch.master_bath_towel_warmer
        # Set HVAC modes to nightime
        - service: input_select.select_option
          data:
            option: Night
            entity_id: input_select.hvac_controller_common_area_preset
        - service: input_select.select_option
          data:
            option: Night
            entity_id: input_select.hvac_controller_master_bedroom_preset
        # arm alarm in home mode
        - service: alarm_control_panel.alarm_arm_home
          continue_on_error: true
          entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
        # lock doors
        - service: lock.lock
          continue_on_error: true
          target:
            entity_id:
              - lock.basement_door_lock
              - lock.front_door_lock
        # turn off master bath heaters
        - service: climate.turn_off
          continue_on_error: true
          entity_id:
            - climate.master_bath_heater
        # turn off TV
        - service: remote.turn_off
          continue_on_error: true
          entity_id:
            - remote.living_room_2
            - remote.den

# conditionally disarm alarms
# needed to avoid spurious simplisafe notifications if alarm is aready disarmed
alarm_disarm:
  alias: Disarm Alarms
  description: Disable Alexa Guard and Simplisafe
  sequence:
    # alexa does not care about disarm if already off, so just do it
    - service: alarm_control_panel.alarm_disarm
      continue_on_error: true
      entity_id: alarm_control_panel.alexa_guard_b0cd9
    # disarm SimpliSafe if it is not already off
    - if:
        not:
          - alias: "Alarm disarmed"
            condition: state
            entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
            state: "disarmed"
      then:
        - service: alarm_control_panel.alarm_disarm
          continue_on_error: true
          entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel

# conditionally arm alarms
# needed to avoid spurious simplisafe notifications if alarm is aready armed
alarm_arm_away:
  alias: Arm Alarms Away
  description: Arm Alexa Guard and Simplisafe
  sequence:
    # alexa does not care about disarm if already on, so just do it
    - service: alarm_control_panel.alarm_arm_away
      continue_on_error: true
      entity_id: alarm_control_panel.alexa_guard_b0cd9
    # only proceed if Simplisafe is currently disarmed or armed in home mode
    - condition: state
      entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
      state:
        - "disarmed"
        - "armed_home"
    # arm SimpliSafe to home if the dog is present, otherwise, Away
    - if:
        - alias: Sophie home
          condition: state
          entity_id: person.sophie
          state: home
      then:
        - service: alarm_control_panel.alarm_arm_home
          continue_on_error: true
          entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
      else:
        - service: alarm_control_panel.alarm_arm_away
          continue_on_error: true
          entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel

# trigger automtic backup.
- id: AutoBackup
  alias: Automatic Daily Snapshot
  description: Run snapshot daily and retain for 14 days
  trigger:
    - platform: time
      at: input_datetime.auto_backup_time
  action:
    - service: auto_backup.backup_full
      data:
        name: "DailyBackup: {{ now().strftime('%A, %B %-d, %Y') }}"
        keep_days: 14

# automations to adjust Guest device tracker, used by Guest person
# when binary sensor is changed.
- id: "1616560803743"
  alias: Guest_DT_Home
  description: Switch Guest Device Tracker to home when guests are on Wifi
  trigger:
    - platform: state
      entity_id: binary_sensor.wifi_guests
      to: "on"
      from: "off"
  condition: []
  action:
    - service: device_tracker.see
      data:
        dev_id: guest
        location_name: home
  mode: single
- id: "1616560899377"
  alias: Guest_DT_Not_Home
  description: Set Guest device tracker to Not Home when Guest not detected on Wifi
  trigger:
    - platform: state
      entity_id: binary_sensor.wifi_guests
      from: "on"
      for: 00:05:00
      to: "off"
  condition: []
  action:
    - service: device_tracker.see
      data:
        dev_id: guest
        location_name: not_home
  mode: single

# adjust presence indicator based upon status of Person entities.
- id: PresenceChanging
  alias: Presence_Changing
  description: Trigger when presence is changing
  trigger:
    - platform: state
      entity_id:
        - person.guest
        - person.axel_larsson
        - person.sophie
      to:
        - home
        - not_home
  condition:
    - condition: state
      entity_id: input_boolean.hold_presence
      state: "off"
  action:
    - choose:
        - alias: If Guest is home, set to With Guests
          conditions:
            - condition: state
              entity_id: person.guest
              state: home
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.presence
                option: With Guests
        - alias: If Axel is home set to Home
          conditions:
            - condition: state
              entity_id: person.axel_larsson
              state: home
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.presence
                option: Home
        - alias: If only Sophie is home set to Dog Alone
          conditions:
            - condition: state
              entity_id: person.sophie
              state: home
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.presence
                option: Dog Alone
      # if no one is home, set to Away
      default:
        - service: input_select.select_option
          data:
            entity_id: input_select.presence
            option: Away

# trigger away mode if alarm is armed
- id: AwayOnAlarmArm
  alias: "Set Away when Alarm is armed"
  trigger:
    - platform: state
      entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
      to: "armed_away"
  condition:
    # add condition check to prevent race conditions when disarming.
    # SS will sometimes revert back to Armed Aay if there is a delay when disarming.
    # must have been home for at least 30 minutes.
    - condition: state
      entity_id: input_select.presence
      state:
        - "Home"
        - "With Guests"
      for: "00:30:00"
  action:
    - service: script.going_out

# turn off TVs, warmers, and lights when leaving.
- id: TurnOffWhenLeaving
  alias: Turn_Off_When_Leaving
  description: Turn devices off when leaving
  trigger:
    - platform: state
      entity_id: input_select.presence
      to: Away
      for: 00:00:45
  action:
    - service: light.turn_off
      entity_id:
        - light.den_lights
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.living_room
        - light.laundry_room
        - light.office
        - light.guest_room
        - light.master_bedroom
        - light.kitchen
    - service: switch.turn_off
      entity_id:
        - switch.guest_bath_towel_warmer
        - switch.master_bath_towel_warmer
    - service: remote.turn_off
      entity_id: remote.living_room_2
    - service: remote.turn_off
      entity_id: remote.den

# turn off a subset of devices if the dog is alone
- id: TurnOffWhenLeavingDog
  alias: Turn_Off_When_Leaving_Dog
  description: Turn devices off when leaving dog alone
  trigger:
    - platform: state
      entity_id: input_select.presence
      to: Dog Alone
      for: 00:00:45
  action:
    - service: light.turn_off
      entity_id:
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.laundry_room
        - light.guest_room
        - light.master_bedroom
    - service: switch.turn_off
      entity_id:
        - switch.guest_bath_towel_warmer
        - switch.master_bath_towel_warmer

# Arm alarm 30 minutes after leaving
- id: ArmWhenLeaving
  alias: Arm Alarm when Leaving
  description: Arm Alarm when Leaving
  trigger:
    - platform: state
      entity_id: input_select.presence
      to:
        - Away
        - Dog Alone
      for: 00:30:00
  action:
    - service: script.alarm_arm_away

# disarm alarm when arriving
- id: DisarmWhenArriving
  alias: Disarm Alarm when Arriving
  description: Disarm Alarm when Arriving
  trigger:
    - platform: state
      entity_id: input_select.presence
      from:
        - Away
        - Dog Alone
      to:
        - Home
        - With Guests
  action:
    - service: script.alarm_disarm

# turn lights on when arriving, if its after sunset.
- id: TurnLight123
  alias: Turn_Light_On_Arriving
  description: Turn lights on in the evening
  trigger:
    - platform: state
      entity_id: input_select.presence
      from:
        - Away
        - Dog Alone
      to:
        - Home
        - With Guests
  condition:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
    - service: scene.turn_on
      target:
        entity_id: scene.common_area_normal_lighting

# TV watching motion sensor control
- id: "1617150949677"
  alias: Living Room TV motion sensor off
  description: Turn off living room motion sensor when watching TV
  trigger:
    - platform: state
      entity_id: remote.living_room_2
      from: "off"
      to: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.living_room_motion
  mode: single

- id: "1617150949699"
  alias: Living Room TV motion sensor on
  description: Turn on living room motion sensor when finished watching TV
  trigger:
    - platform: state
      entity_id: remote.living_room_2
      from: "on"
      to: "off"
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.living_room_motion
  mode: single

# TV watching motion sensor control
- id: "1617150949677a"
  alias: Den TV motion sensor off
  description: Turn off living room motion sensor when watching TV
  trigger:
    - platform: state
      entity_id: remote.den
      from: "off"
      to: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.office_motion
  mode: single

- id: "1617150949699b"
  alias: Den TV motion sensor on
  description: Turn on living room motion sensor when finished watching TV
  trigger:
    - platform: state
      entity_id: remote.den
      from: "on"
      to: "off"
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.office_motion
  mode: single

# smart wake up trigers.
# master bedroom Alexa alarm trigger.
- id: SmartWakeUpMasterBedroom
  alias: Smart Wake Up Master Bedroom
  trigger:
    - minutes: /5
      platform: time_pattern
  condition:
    - condition: time
      after: 02:00:00
      before: input_datetime.master_bedroom_wake_up_fallback_time
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_master_bedroom', 'last_triggered').day != utcnow().day }}"
    - condition: template
      value_template: "{{ states('sensor.bedroom_next_alarm') != 'unknown' and as_timestamp(states('sensor.bedroom_next_alarm')) - as_timestamp(now()) <= 3600 and as_timestamp(states('sensor.bedroom_next_alarm')) - as_timestamp(now()) > 0 }}"
  action:
    # execute bathroom heater script and do not wait for completion
    - service: script.turn_on
      target:
        entity_id: script.wake_up_bath_heater
    # trigger wake-up script and wait for it to complete
    - service: script.wake_up
      data:
        warmer: master_bath_towel_warmer
        hvac: master_bedroom

# master bedroom fallback
- id: SmartWakeUpMasterBedroomFallback
  alias: Fallback time for Master Bedroom Wake-up sequence
  trigger:
    - at: input_datetime.master_bedroom_wake_up_fallback_time
      platform: time
  condition:
    - condition: state
      entity_id: input_select.presence
      state:
        - Home
        - With Guests
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_master_bedroom', 'last_triggered').day != utcnow().day }}"
  action:
    # execute bathroom heater script and do not wait for completion
    - service: script.turn_on
      target:
        entity_id: script.wake_up_bath_heater
    # trigger wake-up script and wait for it to complete
    - service: script.wake_up
      data:
        warmer: master_bath_towel_warmer
        hvac: master_bedroom

# guest room alexa alarm trigger
- id: SmartWakeUpGuestRoom
  alias: Smart Wake Up Guest Room
  trigger:
    - minutes: /5
      platform: time_pattern
  condition:
    - condition: time
      after: 02:00:00
      before: input_datetime.guest_bedroom_wake_up_fallback_time
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_guest_room','last_triggered').day != utcnow().day }}"
    - condition: template
      value_template: "{{ states('sensor.guest_room_next_alarm') != 'unknown' and as_timestamp(states('sensor.guest_room_next_alarm')) - as_timestamp(now()) <= 3600 and as_timestamp(states('sensor.guest_room_next_alarm')) - as_timestamp(now()) > 0 }}"
  action:
    - service: script.wake_up
      data:
        warmer: guest_bath_towel_warmer
        hvac: guest_room

# guest room fallback
- id: SmartWakeUpGuestRoomFallback
  alias: Fallback time for Guest Room Wake-up sequence
  trigger:
    - at: input_datetime.guest_bedroom_wake_up_fallback_time
      platform: time
  condition:
    - condition: state
      entity_id: input_select.presence
      state:
        - With Guests
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_guest_room','last_triggered').day != utcnow().day }}"
  action:
    - service: script.wake_up
      data:
        warmer: guest_bath_towel_warmer
        hvac: guest_room

# Toggle motion sensor to prevent lights from turning off in Den when working
- id: ToggleDenMotion
  alias: Toggle Den Motion Sensor
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.3c063016341b_active
        - binary_sensor.axel_larssons_mac_active
      to: "on"
  condition:
    - condition: state
      entity_id: person.axel_larsson
      state: home
    - condition: state
      entity_id: light.office
      state: "on"
    - condition: state
      entity_id: switch.office_motion
      state: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.office_motion
    - delay: "04:00:00"
    - service: switch.turn_on
      target:
        entity_id: switch.office_motion
  mode: single

# New HVAC Controller automations
# Windows open
- id: HVACWindowsOpen
  alias: HVAC Controller Windows Open
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.hvac_windows_den
        - binary_sensor.hvac_windows_living_room
        - binary_sensor.hvac_windows_master_bedroom
      to: "on"
      for: "00:01:00"
  mode: parallel
  action:
    # figure out what zone triggered us
    - variables:
        zone: >
          {{ trigger.entity_id|regex_replace( find='binary_sensor.hvac_windows_(.+)$', replace='\\1' ) }}
        unit: "climate.{{ zone }}"
    # wait for unavaialble unit to become available up to 2 minutes
    - wait_template: "{{ states(unit) not in ('unavailable', 'unknown') }}"
      timeout: "00:02:00"
    # only continue if we are in a supported mode
    - variables:
        state: "{{ states(unit) }}"
    - condition: "{{ state in ('heat', 'cool', 'dry', 'fan_only', 'off') }}"
    # save current state
    - service: input_text.set_value
      data:
        entity_id: "input_text.hvac_windows_state_{{ zone }}"
        value: "{{ state }}"
    - service: input_datetime.set_datetime
      data:
        entity_id: "input_datetime.hvac_windows_last_{{ zone }}"
        timestamp: "{{ now().timestamp() }}"
    # only continue if we are not already off
    - condition: "{{ state != 'off' }}"
    # turn unit off
    - service: climate.turn_off
      data:
        entity_id: "{{ unit }}"

# Windows closed
- id: HVACWindowsClosed
  alias: HVAC Controller Windows Closed
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.hvac_windows_den
        - binary_sensor.hvac_windows_living_room
        - binary_sensor.hvac_windows_master_bedroom
      to: "off"
      for: "00:00:30"
  mode: parallel
  action:
    # figure out what zone triggered us
    - variables:
        zone: >
          {{ trigger.entity_id|regex_replace( find='binary_sensor.hvac_windows_(.+)$', replace='\\1' ) }}
        unit: "climate.{{ zone }}"
    # get saved state
    - variables:
        saved_state: "{{ states('input_text.hvac_windows_state_' + zone) }}"
    # continue if saved state is not 'off'
    - condition: "{{ saved_state != 'off' }}"
    # clear saved state
    - service: input_text.set_value
      data:
        entity_id: "input_text.hvac_windows_state_{{ zone }}"
        value: "off"
    # contiue only if saved state if not stale (less than a day old)
    - condition: >
        {{ as_timestamp(now()) - as_timestamp(states('input_datetime.hvac_windows_last_' + zone)) < 86400 }}
    # wait for unavaialble unit to become available up to 2 minutes
    - wait_template: "{{ states(unit) not in ('unavailable', 'unknown') }}"
      timeout: "00:02:00"
    # set climate mode to saved state
    - service: climate.set_hvac_mode
      data:
        entity_id: "{{ unit }}"
        hvac_mode: "{{ saved_state }}"

# Deal with House Mode changes
- id: HVACHouseModeAway
  alias: HVAC Controller House Mode Away
  trigger:
    - platform: state
      entity_id: input_select.hvac_controller_house_mode
      to:
        - Away
        - ExtAway
  action:
    - variables:
        house_mode: "{{ states('input_select.hvac_controller_house_mode') }}"
    - repeat:
        for_each:
          - living_room
          - den
          - master_bedroom
          - guest_room
          - den_baseboard
        sequence:
          - service: script.turn_on
            target:
              entity_id: script.hvac_enable_preset
            data:
              variables:
                zone: "{{ repeat.item }}"
                preset: "{{ house_mode }}"

# Deal with House mode being reset to Home or preset mode changes
- id: HVACHouseModeHome
  alias: HVAC Controller House Mode Home
  trigger:
    - platform: state
      entity_id:
        - input_select.hvac_controller_house_mode
        - input_select.hvac_controller_common_area_preset
        - input_select.hvac_controller_master_bedroom_preset
        - input_select.hvac_controller_guest_room_preset
  condition:
    - condition: state
      entity_id: input_select.hvac_controller_house_mode
      state: Home
  mode: parallel
  action:
    # Set some vars to figure out what changed
    - variables:
        house_mode: "{{ trigger.entity_id == 'input_select.hvac_controller_house_mode' }}"
        common_area: "{{ trigger.entity_id == 'input_select.hvac_controller_common_area_preset' }}"
        master_bedroom: "{{ trigger.entity_id == 'input_select.hvac_controller_master_bedroom_preset' }}"
        guest_room: "{{ trigger.entity_id == 'input_select.hvac_controller_guest_room_preset' }}"
    # only set HVAC preset if we are returning to home mode for the entire house or
    # the specific area's preset mode has changed.
    - if:
        condition: template
        value_template: "{{ house_mode or common_area }}"
      then:
        - repeat:
            for_each:
              - living_room
              - den
              - den_baseboard
            sequence:
              - service: script.turn_on
                target:
                  entity_id: script.hvac_enable_preset
                data:
                  variables:
                    zone: "{{ repeat.item }}"
                    preset: "{{ states('input_select.hvac_controller_common_area_preset') }}"
    - if:
        condition: template
        value_template: "{{ house_mode or master_bedroom }}"
      then:
        - service: script.turn_on
          target:
            entity_id: script.hvac_enable_preset
          data:
            variables:
              zone: master_bedroom
              preset: "{{ states('input_select.hvac_controller_master_bedroom_preset') }}"
    - if:
        condition: template
        value_template: "{{ house_mode or guest_room }}"
      then:
        - service: script.turn_on
          target:
            entity_id: script.hvac_enable_preset
          data:
            variables:
              zone: guest_room
              preset: "{{ states('input_select.hvac_controller_guest_room_preset') }}"

# Set HVAC away 30 minutes after leaving
- id: HVACAway
  alias: HVAC Controller Set Away
  description: Set HVAC Controller to Away mode
  trigger:
    - platform: state
      entity_id: input_select.presence
      to:
        - Away
        - Dog Alone
      for: 00:30:00
  condition:
    - condition: state
      entity_id: input_select.hvac_controller_house_mode
      state: Home
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: Away

# Set HVAC ExtAway 6 hours after leaving
- id: HVACExtAway
  alias: HVAC Controller Set ExtAway
  description: Set HVAC Controller to ExtAway mode
  trigger:
    - platform: state
      entity_id: input_select.presence
      to:
        - Away
      for: 06:00:00
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: ExtAway

# Set HVAC mode home
- id: HVACHome
  alias: HVAC Controller Set Home
  description: Set HVAC Controller to Home mode
  trigger:
    - platform: state
      entity_id: input_select.presence
      to:
        - Home
        - With Guests
      from:
        - Away
        - Dog Alone
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.hvac_controller_house_mode
        option: Home

# HVAC Controller anticipation automations. Prepare for return home based
# on certain triggers.

# Prepare for return home if at family house on Sunday night
- id: PrepareHVACReturnSunday
  alias: HVAC Controller Prepare Return Sunday
  description: Prepare for return home on Sundays
  mode: single
  max_exceeded: silent
  trigger:
    - platform: time_pattern
      minutes: "/10"
  condition:
    # only on a Sunday between 17:00-19:00 hours
    - condition: time
      after: "17:00:00"
      before: "19:00:00"
      weekday:
        - sun
    # only if I'm at the Family House
    - condition: state
      entity_id: person.axel_larsson
      state: "Family House"
  action:
    # run the script
    - service: script.hvac_prepare_return_from_extaway

# Prepare for return home if I'm returning from a trip and have landed at a
# local airport. The ExtAway time check in the script prevents this from
# firing for depatures.
- id: PrepareHVACReturnAirport
  alias: "HVAC Controller Prepare Return Airport"
  description: Prepare for return home from a business trip
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: person.axel_larsson
      to:
        - EWR
        - JFK
        - LGA
  action:
    # run the script
    - service: script.hvac_prepare_return_from_extaway

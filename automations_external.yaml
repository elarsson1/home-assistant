# trigger automtic backup.
- id: AutoBackup
  alias: Automatic Daily Snapshot
  description: Run snapshot daily and retain for 14 days
  trigger:
    - platform: time
      at: input_datetime.auto_backup_time
  action:
    - service: auto_backup.backup_full
      data:
        name: "DailyBackup: {{ now().strftime('%A, %B %-d, %Y') }}"
        keep_days: 14

# automations to adjust Guest device tracker, used by Guest person
# when binary sensor is changed.
- id: "1616560803743"
  alias: Guest_DT_Home
  description: Switch Guest Device Tracker to home when guests are on Wifi
  trigger:
    - platform: state
      entity_id: binary_sensor.wifi_guests
      to: "on"
      from: "off"
  condition: []
  action:
    - service: device_tracker.see
      data:
        dev_id: guest
        location_name: home
  mode: single
- id: "1616560899377"
  alias: Guest_DT_Not_Home
  description: Set Guest device tracker to Not Home when Guest not detected on Wifi
  trigger:
    - platform: state
      entity_id: binary_sensor.wifi_guests
      from: "on"
      for: 00:05:00
      to: "off"
  condition: []
  action:
    - service: device_tracker.see
      data:
        dev_id: guest
        location_name: not_home
  mode: single

# adjust presence indicator based upon status of Person entities.
- id: PresenceChanging
  alias: Presence_Changing
  description: Trigger when presence is changing
  trigger:
    - platform: state
      entity_id:
        - person.guest
        - person.axel_larsson
        - person.sophie
      to:
        - home
        - not_home
  condition:
    - condition: state
      entity_id: input_boolean.hold_presence
      state: "off"
  action:
    - choose:
        - alias: If nobody is home, set to Away
          conditions:
            - condition: state
              entity_id:
                - person.guest
                - person.axel_larsson
                - person.sophie
              state: not_home
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.presence
                option: Away
        - alias: If Guest is home, set to With Guests
          conditions:
            - condition: state
              entity_id: person.guest
              state: home
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.presence
                option: With Guests
        - alias: If Axel is home set to Home
          conditions:
            - condition: state
              entity_id: person.axel_larsson
              state: home
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.presence
                option: Home
        - alias: If only Sophie is home set to Dog Alone
          conditions:
            - condition: state
              entity_id: person.sophie
              state: home
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.presence
                option: Dog Alone

# trigger away mode if alarm is armed
- id: AwayOnAlarmArm
  alias: "Set Away when Alarm is armed"
  trigger:
    - platform: state
      entity_id: alarm_control_panel.178_coles_st_alarm_control_panel_alarm_control_panel
      to: "armed_away"
  condition:
    # add condition check to prevent race conditions when disarming.
    # SS will sometimes revert back to Armed Aay if there is a delay when disarming.
    # must have been home for at least 30 minutes.
    - condition: state
      entity_id: input_select.presence
      state:
        - "Home"
        - "With Guests"
      for: "00:30:00"
  action:
    - service: script.going_out

# turn off TVs, warmers, and lights when leaving.
- id: TurnOffWhenLeaving
  alias: Turn_Off_When_Leaving
  description: Turn devices off when leaving
  trigger:
    - platform: state
      entity_id: input_select.presence
      to: Away
      for: 00:00:45
  action:
    - service: light.turn_off
      entity_id:
        - light.den_lights
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.living_room
        - light.laundry_room
        - light.office
        - light.guest_room
        - light.master_bedroom
        - light.kitchen
    - service: switch.turn_off
      entity_id:
        - switch.guest_bath_towel_warmer
        - switch.master_bath_towel_warmer
    - service: remote.turn_off
      entity_id: remote.living_room_2
    - service: remote.turn_off
      entity_id: remote.den

# turn off a subset of lights if the dog is alone
- id: TurnOffWhenLeavingDog
  alias: Turn_Off_When_Leaving_Dog
  description: Turn devices off when leaving dog alone
  trigger:
    - platform: state
      entity_id: input_select.presence
      to: Dog Alone
      for: 00:00:45
  action:
    - service: light.turn_off
      entity_id:
        - light.vestibule_switch
        - light.under_stoop_lights
        - light.laundry_room
        - light.guest_room
        - light.master_bedroom

# Arm alarm 30 minutes after leaving
- id: ArmWhenLeaving
  alias: Arm Alarm when Leaving
  description: Arm Alarm when Leaving
  trigger:
    - platform: state
      entity_id: input_select.presence
      to:
        - Away
        - Dog Alone
      for: 00:30:00
  action:
    - service: script.alarm_arm_away

# Turn off HVAC when leaving after 30 minutes
- id: OffHVACWhenLeaving
  alias: Off_HVAC_When_Leaving
  description: Disable HVAC when leaving
  trigger:
    - platform: state
      entity_id: input_select.presence
      to: Away
      for: 00:30:00
  action:
    - service: climate.turn_off
      entity_id:
        - climate.den
        - climate.den_thermostat
        - climate.living_room
        - climate.living_room_thermostat
        - climate.master_bedroom
        - climate.master_bedroom_thermostat
        - climate.den_heater
        - climate.den_baseboard
        - climate.master_bedroom_heater
    - service: switch.turn_off
      entity_id:
        - switch.den_ac_climate_react
        - switch.living_room_ac_climate_react
        - switch.master_bedroom_ac_climate_react

# disarm alarm when arriving
- id: DisarmWhenArriving
  alias: Disarm Alarm when Arriving
  description: Disarm Alarm when Arriving
  trigger:
    - platform: state
      entity_id: input_select.presence
      from:
        - Away
        - Dog Alone
      to:
        - Home
        - With Guests
  action:
    - service: script.alarm_disarm

# reset HVAC state when arriving.
- id: TurnHVACOnWhenArriving
  alias: Turn_HVAC_On_When_Arriving
  description: Turn HVAC back on when arriving
  trigger:
    - platform: state
      entity_id: input_select.presence
      from:
        - Away
        - Dog Alone
      to:
        - Home
        - With Guests
  action:
    - service: switch.turn_on
      entity_id:
        - switch.den_ac_climate_react
        - switch.living_room_ac_climate_react
    # also bedroom if its after the pre-warm time.
    - condition: time
      after: input_datetime.bedroom_preheatcool
      before: "05:00"
    - service: switch.turn_on
      entity_id: switch.master_bedroom_ac_climate_react

# turn lights on when arriving, if its after sunset.
- id: TurnLight123
  alias: Turn_Light_On_Arriving
  description: Turn lights on in the evening
  trigger:
    - platform: state
      entity_id: input_select.presence
      from:
        - Away
        - Dog Alone
      to:
        - Home
        - With Guests
  condition:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
    - service: scene.turn_on
      target:
        entity_id: scene.common_area_normal_lighting

# TV watching motion sensor control
- id: "1617150949677"
  alias: Living Room TV motion sensor off
  description: Turn off living room motion sensor when watching TV
  trigger:
    - platform: state
      entity_id: remote.living_room_2
      from: "off"
      to: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.living_room_motion_sensor
  mode: single

- id: "1617150949699"
  alias: Living Room TV motion sensor on
  description: Turn on living room motion sensor when finished watching TV
  trigger:
    - platform: state
      entity_id: remote.living_room_2
      from: "on"
      to: "off"
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.living_room_motion_sensor
  mode: single

# TV watching motion sensor control
- id: "1617150949677a"
  alias: Den TV motion sensor off
  description: Turn off living room motion sensor when watching TV
  trigger:
    - platform: state
      entity_id: remote.den
      from: "off"
      to: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.den_motion_sensor
  mode: single

- id: "1617150949699b"
  alias: Den TV motion sensor on
  description: Turn on living room motion sensor when finished watching TV
  trigger:
    - platform: state
      entity_id: remote.den
      from: "on"
      to: "off"
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.den_motion_sensor
  mode: single

# smart wake up trigers.
# master bedroom Alexa alarm trigger.
- id: SmartWakeUpMasterBedroom
  alias: Smart Wake Up Master Bedroom
  trigger:
    - minutes: /5
      platform: time_pattern
  condition:
    - condition: time
      after: 02:00:00
      before: input_datetime.master_bedroom_wake_up_fallback_time
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_master_bedroom', 'last_triggered').day != utcnow().day }}"
    - condition: template
      value_template: "{{ states('sensor.bedroom_next_alarm') != 'unavailable' and as_timestamp(states('sensor.bedroom_next_alarm')) - as_timestamp(now()) <= 3600 }}"
  action:
    # execute pre-warm script and do not wait for completion
    - service: script.turn_on
      target:
        entity_id: script.pre_warm
      data:
        variables:
          room: master_bedroom
    # execute bathroom heater script and do not wait for completion
    - service: script.turn_on
      target:
        entity_id: script.wake_up_bath_heater
    # trigger wake-up script and wait for it to complete
    - service: script.wake_up
      data:
        warmer: master_bath_towel_warmer
    # turn off mini split and climate react
    - service: climate.turn_off
      entity_id:
        - climate.master_bedroom
        - climate.master_bedroom_thermostat
    - service: switch.turn_off
      entity_id: switch.master_bedroom_ac_climate_react

# master bedroom fallback
- id: SmartWakeUpMasterBedroomFallback
  alias: Fallback time for Master Bedroom Wake-up sequence
  trigger:
    - at: input_datetime.master_bedroom_wake_up_fallback_time
      platform: time
  condition:
    - condition: state
      entity_id: input_select.presence
      state:
        - Home
        - With Guests
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_master_bedroom', 'last_triggered').day != utcnow().day }}"
  action:
    # execute pre-warm script and do not wait for completion
    - service: script.turn_on
      target:
        entity_id: script.pre_warm
      data:
        variables:
          room: master_bedroom
    # execute bathroom heater script and do not wait for completion
    - service: script.turn_on
      target:
        entity_id: script.wake_up_bath_heater
    # trigger wake-up script and wait for it to complete
    - service: script.wake_up
      data:
        warmer: master_bath_towel_warmer
    # turn off mini split and climate react
    - service: climate.turn_off
      entity_id:
        - climate.master_bedroom
        - climate.master_bedroom_thermostat
    - service: switch.turn_off
      entity_id: switch.master_bedroom_ac_climate_react

# guest room alexa alarm trigger
- id: SmartWakeUpGuestRoom
  alias: Smart Wake Up Guest Room
  trigger:
    - minutes: /5
      platform: time_pattern
  condition:
    - condition: time
      after: 02:00:00
      before: input_datetime.guest_bedroom_wake_up_fallback_time
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_guest_room','last_triggered').day != utcnow().day }}"
    - condition: template
      value_template: "{{ states('sensor.guest_room_next_alarm') != 'unavailable' and as_timestamp(states('sensor.guest_room_next_alarm')) - as_timestamp(now()) <= 3600 }}"
  action:
    - service: script.wake_up
      data:
        warmer: guest_bath_towel_warmer

# guest room fallback
- id: SmartWakeUpGuestRoomFallback
  alias: Fallback time for Guest Room Wake-up sequence
  trigger:
    - at: input_datetime.guest_bedroom_wake_up_fallback_time
      platform: time
  condition:
    - condition: state
      entity_id: input_select.presence
      state:
        - With Guests
    - condition: template
      value_template: "{{ state_attr('automation.smart_wake_up_guest_room','last_triggered').day != utcnow().day }}"
  action:
    - service: script.wake_up
      data:
        warmer: guest_bath_towel_warmer

# Pre-cool or warm master bedroom before bed.
- id: BedtimePreHVAC
  alias: Get HVAC ready for bed
  trigger:
    - at: input_datetime.bedroom_preheatcool
      platform: time
  condition:
    - condition: state
      entity_id: input_select.presence
      state:
        - Home
        - With Guests
  action:
    - service: script.turn_on
      target:
        entity_id: script.pre_warm
      data:
        variables:
          room: master_bedroom

# turn on HVAC to prevent freezing
- id: AntiFreezeOn
  alias: Anti-Freeze On
  trigger:
    - minutes: 5
      platform: time_pattern
  condition:
    - condition: numeric_state
      entity_id: weather.home
      attribute: temperature
      below: input_number.anti_freeze_low_outdoor_threshold
  action:
    - service: script.anti_freeze_on
      data:
        thermostat: climate.living_room_heater
    - service: script.anti_freeze_on
      data:
        thermostat: climate.den_heater
    - service: script.anti_freeze_on
      data:
        thermostat: climate.den_baseboard
    - service: script.anti_freeze_on
      data:
        thermostat: climate.master_bedroom_heater

# turn off anti-freeze when outdoor temp rises
- id: AntiFreezeOff
  alias: Anti-Freeze Off
  trigger:
    - minutes: 5
      platform: time_pattern
  condition:
    - condition: numeric_state
      entity_id: weather.home
      attribute: temperature
      above: input_number.anti_freeze_high_outdoor_threshold
  action:
    - service: script.anti_freeze_off
      data:
        thermostat: climate.living_room_heater
    - service: script.anti_freeze_off
      data:
        thermostat: climate.den_heater
    - service: script.anti_freeze_off
      data:
        thermostat: climate.den_baseboard
    - service: script.anti_freeze_off
      data:
        thermostat: climate.master_bedroom_heater

# Enable master bedroom motion sensor
- id: EnableMBRMotion
  alias: Enable Master Bed Motion Sensor
  trigger:
    - at: input_datetime.bedroom_motion_sensor_on_time
      platform: time
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.master_bedroom_motion_sensor
  mode: single

# Disable master bedroom motion sensor
- id: DisableMBRMotion
  alias: Disable Master Bed Motion Sensor
  trigger:
    - at: input_datetime.bedroom_motion_sensor_off_time
      platform: time
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.master_bedroom_motion_sensor
  mode: single

# Toggle motion sensor to prevent lights from turning off in Den when working
- id: ToggleDenMotion
  alias: Toggle Den Motion Sensor
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.3c063016341b_active
        - binary_sensor.axel_larsson_s_mac_active
      to: "on"
  condition:
    - condition: state
      entity_id: person.axel_larsson
      state: home
    - condition: state
      entity_id: light.office
      state: "on"
    - condition: state
      entity_id: switch.den_motion_sensor
      state: "on"
  action:
    - service: switch.turn_off
      target:
        entity_id: switch.den_motion_sensor
    - delay: "04:00:00"
    - service: switch.turn_on
      target:
        entity_id: switch.den_motion_sensor
  mode: single
